// 在有序数据中找到目标数据的位置索引
class Solution {
    public int searchInsert(int[] nums, int target) {
        for(int i=0;i<nums.length;i++){
            if(target==nums[i]){
                return i;
            }else if(target>nums[nums.length-1]){
                return nums.length;
            }else if(target<nums[i]){
                return 0;
            }else if(target>nums[i] && target<nums[i+1]){
                return i+1;
            }
        }
        return 20;
    }
}

// 更优解----二分查找法
class Solution{
    public int searchInsert(int[] nums, int target) {
        int low=0,high=nums.length-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(nums[mid] == target) return mid;
            else if(nums[mid] > target) high = mid-1;
            else low = mid+1;
        }
        return low;
    }
}
